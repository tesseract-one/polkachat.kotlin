pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}
dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()
        maven {
            url = uri("https://maven.tesseract.one/Tesseract.android")
        }
        maven { url = uri("https://repo.repsy.io/mvn/chrynan/public") }
        maven { url = uri("https://jcenter.bintray.com/") }
    }
}

def projectDir = rootProject.projectDir
def localPropsFile = new File(projectDir, 'local.properties')
Properties properties = new Properties()
properties.load(localPropsFile.newDataInputStream())

def devModeString = properties.getProperty('tesseract.devmode')
def devMode = devModeString == null ? false : devModeString == "true"

if(devMode) {
    includeBuild('../Tesseract.android') {
        dependencySubstitution {
            substitute module('one.tesseract:detached-activity') using project(':java:detached-activity')
            substitute module('one.tesseract:base') using project(':java:base')
            substitute module('one.tesseract:common') using project(':java:common')
            substitute module('one.tesseract:client') using project(':java:client')
        }
    }
}

rootProject.name = "Polkadot SmartContract Demo Chat Kotlin"
include ':android'
project(":android").name = "polkachat"
