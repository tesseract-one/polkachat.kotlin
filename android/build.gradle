plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'one.tesseract.polkachat'

    compileSdk rootProject.ext.compileSdkVersion
    ndkVersion rootProject.ext.ndkVersion

    defaultConfig {
        applicationId "one.tesseract.polkachat"
        minSdk rootProject.ext.minSdkVersion
        targetSdk rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion rootProject.ext.composeVersion
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

apply plugin: 'org.mozilla.rust-android-gradle.rust-android'

task fixNotCopyingRustJniLibs(type: Delete) {
    delete layout.buildDirectory.dir("intermediates/merged_jni_libs")
}

project.afterEvaluate {
    tasks.getByName("mergeDebugJniLibFolders").dependsOn("cargoBuild")
    tasks.getByName("mergeReleaseJniLibFolders").dependsOn("cargoBuild")
    tasks.getByName("cargoBuild").dependsOn("fixNotCopyingRustJniLibs")
}

cargo {
    module  = "../common"       // Or whatever directory contains your Cargo.toml
    libname = "polkachat"          // Or whatever matches Cargo.toml's [package] name.
    targets = rootProject.ext.rustNdkTargets  // See bellow for a longer list of options
    targetDirectory = '../target'
    rustupChannel = "nightly"
}

dependencies {
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation "androidx.compose.ui:ui:$composeVersion"
    implementation "androidx.compose.ui:ui-tooling-preview:$composeVersion"
    implementation 'androidx.compose.material:material:1.3.1'

    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.6.4")

    implementation 'one.tesseract.android:crabdroid'
    implementation 'one.tesseract.android:tesseract-base'
    implementation 'one.tesseract.android:tesseract-ipc'
    implementation 'one.tesseract.android:tesseract-ipc-client'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$composeVersion"
    debugImplementation "androidx.compose.ui:ui-tooling:$composeVersion"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$composeVersion"
}